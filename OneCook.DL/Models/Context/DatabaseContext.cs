using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using OneCook.DL.Models.Context.Helper;
using OneCook.DL.Models.Custom;
using System.Data.Common;
using System.Linq;
using System.Threading.Tasks;

namespace OneCook.DL.Models.Context
{
    public class DatabaseContext : DbContext
    {
        public DatabaseContext() { }
        public DatabaseContext(DbContextOptions<DatabaseContext> options) : base(options)
        {

        }

        public DbSet<Category> Category { get; set; }
        public DbSet<Comment> Comment { get; set; }
        public DbSet<Favorite> Favorite { get; set; }
        public DbSet<Follower> Follower { get; set; }
        public DbSet<FollowerList> FollowerList { get; set; }
        public DbSet<Image> Image { get; set; }
        public DbSet<Ingredient> Ingredient { get; set; }
        public DbSet<IngredientList> IngredientList { get; set; }
        public DbSet<Like> Like { get; set; }
        public DbSet<PreparationGuide> PreparationGuide { get; set; }
        public DbSet<Recipe> Recipe { get; set; }
        public DbSet<RecipeCategory> RecipeCategory { get; set; }
        public DbSet<Step> Step { get; set; }
        public DbSet<Tag> Tag { get; set; }
        public DbSet<TagList> TagList { get; set; }
        public DbSet<User> User { get; set; }
        public DbSet<UserLevel> UserLevel { get; set; }
        public DbSet<CustomRecipe> CustomRecipe { get; set; }
        public DbSet<MainUserProfileView> MainUserProfileView { get; set; }
        public DbSet<UserProfileView> UserProfileView { get; set; }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<User>()
                .HasIndex(x => x.Email)
                .IsUnique();

            modelBuilder.Entity<TagList>()
                .HasIndex(x => x.RecipeId)
                .IsUnique();

            modelBuilder.Entity<FollowerList>()
                .HasIndex(x => x.UserId)
                .IsUnique();

            modelBuilder.Entity<IngredientList>()
               .HasIndex(x => x.RecipeId)
               .IsUnique();

            modelBuilder.Entity<PreparationGuide>()
               .HasIndex(x => x.RecipeId)
               .IsUnique();

            AddUserLevelFromEnum(modelBuilder);
            AddTagsFromEnum(modelBuilder);
            AddCategoriesFromEnum(modelBuilder);

            modelBuilder.Entity<CustomRecipe>().HasNoKey().ToView("view_name_that_doesnt_exist");
            modelBuilder.Entity<MainUserProfileView>().HasNoKey().ToView("view_name_that_doesnt_exist_1");
            modelBuilder.Entity<UserProfileView>().HasNoKey().ToView("view_name_that_doesnt_exist_2");
            modelBuilder.Entity<CustomRecipeByTime>().HasNoKey().ToView("view_name_that_doesnt_exist_3");
 
        }

        #region AutoGeneratedValues
        private void AddTagsFromEnum(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tag>().HasData(
                new Tag
                {
                    Id = 1,
                    Name = "Celiaquia"
                },
                new Tag
                {
                    Id = 2,
                    Name = "Intolerancia a la lactosa"
                });
        }

        private void AddCategoriesFromEnum(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Category>()
                .HasData(
                new Category
                {
                    Id = 1,
                    Name = "Saludable"
                },
                new Category
                {
                    Id = 2,
                    Name = "Casero"
                },
                new Category
                {
                    Id = 3,
                    Name = "Sushi"
                },
                new Category
                {
                    Id = 4,
                    Name = "Pescado"
                },
                new Category
                {
                    Id = 5,
                    Name = "Vegano"
                },
                new Category
                {
                    Id = 6,
                    Name = "Comida Rapida"
                },
                new Category
                {
                    Id = 7,
                    Name = "Vegetariana"
                },
                new Category
                {
                    Id = 8,
                    Name = "Carne"
                }
                );

        }

        private void AddUserLevelFromEnum(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserLevel>().HasData(
                new UserLevel
                {
                    Id = 1,
                    LevelName = "Free",
                    Price = 0
                },
                new UserLevel
                {
                    Id = 2,
                    LevelName = "Premium",
                    Price = 10
                },
                new UserLevel
                {
                    Id = 3,
                    LevelName = "Premium Plus",
                    Price = 15
                }
                );
        }


        #endregion

    }
}
